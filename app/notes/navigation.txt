
 popUpTo:假如从a跳转到b，然后再从b跳转到c，b到c的时候popUpTo是a，则b跳转到c的时候会同时把b销毁。这样c返回的时候会直接返回到a

 popUpToInclusive:如果指定为true，则b跳转到c的时候会同时把b和a都销毁。这样从c返回的时候直接退出app。

 a->b->c->a a会重新创建新的对象，如果要从c到第一个a，需要使用popUpTo

<action
            android:id="@+id/action_b_to_c"
            app:destination="@id/navigation_c"
            app:popUpTo="@id/navigation_a"
            app:popUpToInclusive="false" />

<navigation>
    <activity
    android:id="@+id/sampleActivityDestination"
    android:name="com.weishop.test.jetpack.navigation.DestinationActivity" />

     <activity
            android:id="@+id/sampleActivityDestination"
            app:action="android.intent.action.VIEW"
            app:data="https://example.com"
            app:targetPackage="${applicationId}" />
 </navigation>
 可以显示指定activity的名称，跳转至指定的activity
 也可以值intent-filter隐士跳转至指定的activity

navController.navigateUp():相当于工具类顶部的向上箭头返回键.针对整个导航图，
返回到起始位置(startDestination)的时候会返回false，无法再返回
navController.popBackStack(navigationId, false)可以指定id，返回目标地点。当该方法返回false的时候，说明已经到达起点。这时候获取
view?.findNavController()?.currentDestination会返回null。也就是说此方法会把起点的fragment也弹出去。回到图的顶点。

Dialog destinations例如DialogFragment，位于其它fragment上方，位于栈的顶部，如果导航到其它fragment，栈顶fragment都会被销毁。

Navigation中Fragment与Fragment之间的通信可以借助于livedata
Fragment与Fragment之间传递少量数据借助于argument，传递大量数据借助于viewModel

Safe Args传递参数能保证参数的类型，可以安全传输。参数生成的类:build/generated/source/navigation-args/debug



